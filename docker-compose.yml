name: ${PROJECT_NAME}
services:
  postgres:
    image: postgres:17-alpine
    container_name: ${PROJECT_NAME}-db
    restart: always
    volumes:
      - project-data:/var/lib/postgresql/data
      - ./_entrypoint:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_APP_USER=${POSTGRES_APP_USER}
      - POSTGRES_APP_PASSWORD=${POSTGRES_APP_PASSWORD}
    networks:
      - project-net
  backend:
    depends_on:
      - postgres
    image: ${BACKEND_IMAGE_NAME}
    container_name: ${PROJECT_NAME}-backend
    restart: always
    networks:
      - project-net
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_APP_USER}:${POSTGRES_APP_PASSWORD}@${PROJECT_NAME}-db:${POSTGRES_PORT}/${POSTGRES_DB}
    post_start:
      - command:
          [
            "sh",
            "-c",
            'bunx prisma db push',
          ]
  frontend:
    depends_on:
      - backend
    image: ${FRONTEND_IMAGE_NAME}
    container_name: ${PROJECT_NAME}-frontend
    restart: always
    ports:
      - ${FRONTEND_PORT}:3000
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_APP_USER}:${POSTGRES_APP_PASSWORD}@${PROJECT_NAME}-db:${POSTGRES_PORT}/${POSTGRES_DB}
      - AUTH_SECRET=${AUTH_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - AUTH_TRUST_HOST=${AUTH_TRUST_HOST}
    networks:
      - project-net

volumes:
  project-data:
    name: ${PROJECT_NAME}-project-data
networks:
  project-net:
    name: ${PROJECT_NAME}-project-net